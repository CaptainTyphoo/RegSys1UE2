function [ sysk, sysd ] = DP_System( parDP )
%DP_SYSTEM Summary of this function goes here
%   Detailed explanation goes here

l1 = parDP.l1;
l2 = parDP.l2;
m1 = parDP.m1;
m2 = parDP.m2;
a1 = parDP.a1;
a2 = parDP.a2;
J1 = parDP.J1;
J2 = parDP.J2;
d1 = parDP.d1;
d2 = parDP.d2;

u = parDP.uR;

g=9.81;



x1R = parDP.phi1R;
x2R = parDP.omega1R;
x3R = parDP.phi2R;
x4R = parDP.omega2R;
x5R = parDP.sR;
x6R = parDP.wR;

Ta = parDP.Ta;

AA = [0 1 0 0 0 0; -0.2e1 * (a2 ^ 2 * m2 + J2) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) ^ 2 * (-a2 * l1 * m2 * sin(x1R - x3R) * x4R ^ 2 - (d1 + d2) * x2R + d2 * x4R + g * m1 * a1 * sin(x1R) + g * m2 * l1 * sin(x1R)) * a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) * sin(x1R - x3R) + (a2 ^ 2 * m2 + J2) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (-a2 * l1 * m2 * cos(x1R - x3R) * x4R ^ 2 + g * m1 * a1 * cos(x1R) + g * m2 * l1 * cos(x1R)) + a2 * l1 * m2 * sin(x1R - x3R) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (a2 * l1 * m2 * sin(x1R - x3R) * x2R ^ 2 + d2 * x2R - d2 * x4R + g * m2 * a2 * sin(x3R)) + 0.2e1 * a2 ^ 3 * l1 ^ 3 * m2 ^ 3 * cos(x1R - x3R) ^ 2 / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) ^ 2 * (a2 * l1 * m2 * sin(x1R - x3R) * x2R ^ 2 + d2 * x2R - d2 * x4R + g * m2 * a2 * sin(x3R)) * sin(x1R - x3R) - a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * x2R ^ 2 + (a2 ^ 2 * l1 * m2 ^ 2 * sin(x1R - x3R) * cos(x3R) - sin(x1R) * (a1 * m1 + l1 * m2) * (a2 ^ 2 * m2 + J2)) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * u - 0.2e1 * (-a2 ^ 2 * l1 * m2 ^ 2 * cos(x1R - x3R) * cos(x3R) + cos(x1R) * (a1 * m1 + l1 * m2) * (a2 ^ 2 * m2 + J2)) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) ^ 2 * u * a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) * sin(x1R - x3R) (a2 ^ 2 * m2 + J2) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (-d1 - d2) - a2 * l1 * m2 * cos(x1R - x3R) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (0.2e1 * a2 * l1 * m2 * sin(x1R - x3R) * x2R + d2) 0.2e1 * (a2 ^ 2 * m2 + J2) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) ^ 2 * (-a2 * l1 * m2 * sin(x1R - x3R) * x4R ^ 2 - (d1 + d2) * x2R + d2 * x4R + g * m1 * a1 * sin(x1R) + g * m2 * l1 * sin(x1R)) * a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) * sin(x1R - x3R) + (a2 ^ 2 * m2 + J2) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * a2 * l1 * m2 * cos(x1R - x3R) * x4R ^ 2 - a2 * l1 * m2 * sin(x1R - x3R) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (a2 * l1 * m2 * sin(x1R - x3R) * x2R ^ 2 + d2 * x2R - d2 * x4R + g * m2 * a2 * sin(x3R)) - 0.2e1 * a2 ^ 3 * l1 ^ 3 * m2 ^ 3 * cos(x1R - x3R) ^ 2 / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) ^ 2 * (a2 * l1 * m2 * sin(x1R - x3R) * x2R ^ 2 + d2 * x2R - d2 * x4R + g * m2 * a2 * sin(x3R)) * sin(x1R - x3R) - a2 * l1 * m2 * cos(x1R - x3R) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (-a2 * l1 * m2 * cos(x1R - x3R) * x2R ^ 2 + g * m2 * a2 * cos(x3R)) + (-a2 ^ 2 * l1 * m2 ^ 2 * sin(x1R - x3R) * cos(x3R) + a2 ^ 2 * l1 * m2 ^ 2 * cos(x1R - x3R) * sin(x3R)) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * u + 0.2e1 * (-a2 ^ 2 * l1 * m2 ^ 2 * cos(x1R - x3R) * cos(x3R) + cos(x1R) * (a1 * m1 + l1 * m2) * (a2 ^ 2 * m2 + J2)) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) ^ 2 * u * a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) * sin(x1R - x3R) (a2 ^ 2 * m2 + J2) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (-0.2e1 * a2 * l1 * m2 * sin(x1R - x3R) * x4R + d2) + a2 * l1 * m2 * cos(x1R - x3R) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * d2 0 0; 0 0 0 1 0 0; a2 * l1 * m2 * sin(x1R - x3R) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (-a2 * l1 * m2 * sin(x1R - x3R) * x4R ^ 2 - (d1 + d2) * x2R + d2 * x4R + g * m1 * a1 * sin(x1R) + g * m2 * l1 * sin(x1R)) + 0.2e1 * a2 ^ 3 * l1 ^ 3 * m2 ^ 3 * cos(x1R - x3R) ^ 2 / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) ^ 2 * (-a2 * l1 * m2 * sin(x1R - x3R) * x4R ^ 2 - (d1 + d2) * x2R + d2 * x4R + g * m1 * a1 * sin(x1R) + g * m2 * l1 * sin(x1R)) * sin(x1R - x3R) - a2 * l1 * m2 * cos(x1R - x3R) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (-a2 * l1 * m2 * cos(x1R - x3R) * x4R ^ 2 + g * m1 * a1 * cos(x1R) + g * m2 * l1 * cos(x1R)) - 0.2e1 * (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) ^ 2 * (a2 * l1 * m2 * sin(x1R - x3R) * x2R ^ 2 + d2 * x2R - d2 * x4R + g * m2 * a2 * sin(x3R)) * a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) * sin(x1R - x3R) + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * a2 * l1 * m2 * cos(x1R - x3R) * x2R ^ 2 + m2 * a2 * (sin(x1R) * l1 * (a1 * m1 + l1 * m2) * cos(x1R - x3R) + cos(x1R) * l1 * (a1 * m1 + l1 * m2) * sin(x1R - x3R)) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * u - 0.2e1 * m2 ^ 3 * a2 ^ 3 * (-cos(x1R) * l1 * (a1 * m1 + l1 * m2) * cos(x1R - x3R) + cos(x3R) * (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1)) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) ^ 2 * u * l1 ^ 2 * cos(x1R - x3R) * sin(x1R - x3R) -a2 * l1 * m2 * cos(x1R - x3R) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (-d1 - d2) + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (0.2e1 * a2 * l1 * m2 * sin(x1R - x3R) * x2R + d2) -a2 * l1 * m2 * sin(x1R - x3R) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (-a2 * l1 * m2 * sin(x1R - x3R) * x4R ^ 2 - (d1 + d2) * x2R + d2 * x4R + g * m1 * a1 * sin(x1R) + g * m2 * l1 * sin(x1R)) - 0.2e1 * a2 ^ 3 * l1 ^ 3 * m2 ^ 3 * cos(x1R - x3R) ^ 2 / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) ^ 2 * (-a2 * l1 * m2 * sin(x1R - x3R) * x4R ^ 2 - (d1 + d2) * x2R + d2 * x4R + g * m1 * a1 * sin(x1R) + g * m2 * l1 * sin(x1R)) * sin(x1R - x3R) - a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * x4R ^ 2 + 0.2e1 * (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) ^ 2 * (a2 * l1 * m2 * sin(x1R - x3R) * x2R ^ 2 + d2 * x2R - d2 * x4R + g * m2 * a2 * sin(x3R)) * a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) * sin(x1R - x3R) + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (-a2 * l1 * m2 * cos(x1R - x3R) * x2R ^ 2 + g * m2 * a2 * cos(x3R)) + m2 * a2 * (-cos(x1R) * l1 * (a1 * m1 + l1 * m2) * sin(x1R - x3R) - sin(x3R) * (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1)) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * u + 0.2e1 * m2 ^ 3 * a2 ^ 3 * (-cos(x1R) * l1 * (a1 * m1 + l1 * m2) * cos(x1R - x3R) + cos(x3R) * (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1)) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) ^ 2 * u * l1 ^ 2 * cos(x1R - x3R) * sin(x1R - x3R) -a2 * l1 * m2 * cos(x1R - x3R) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * (-0.2e1 * a2 * l1 * m2 * sin(x1R - x3R) * x4R + d2) - (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + (a1 ^ 2 * m1 + l1 ^ 2 * m2 + J1) * (a2 ^ 2 * m2 + J2)) * d2 0 0; 0 0 0 0 0 1; 0 0 0 0 0 0;];
bb = [0; (-a2 ^ 2 * l1 * m2 ^ 2 * cos(x1R - x3R) * cos(x3R) + cos(x1R) * a1 * a2 ^ 2 * m1 * m2 + cos(x1R) * a2 ^ 2 * l1 * m2 ^ 2 + J2 * cos(x1R) * a1 * m1 + J2 * cos(x1R) * l1 * m2) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + a1 ^ 2 * a2 ^ 2 * m1 * m2 + a2 ^ 2 * l1 ^ 2 * m2 ^ 2 + J1 * a2 ^ 2 * m2 + J2 * a1 ^ 2 * m1 + J2 * l1 ^ 2 * m2 + J1 * J2); 0; a2 * m2 * (-cos(x1R) * cos(x1R - x3R) * a1 * l1 * m1 - cos(x1R) * cos(x1R - x3R) * l1 ^ 2 * m2 + cos(x3R) * a1 ^ 2 * m1 + cos(x3R) * l1 ^ 2 * m2 + J1 * cos(x3R)) / (-a2 ^ 2 * l1 ^ 2 * m2 ^ 2 * cos(x1R - x3R) ^ 2 + a1 ^ 2 * a2 ^ 2 * m1 * m2 + a2 ^ 2 * l1 ^ 2 * m2 ^ 2 + J1 * a2 ^ 2 * m2 + J2 * a1 ^ 2 * m1 + J2 * l1 ^ 2 * m2 + J1 * J2); 0; 1;];
cc = [0; 0; 0; 0; 1; 0;];

sysk = ss(AA,bb,cc',0);

sysd= c2d(sysk,Ta,'zoh');

end

